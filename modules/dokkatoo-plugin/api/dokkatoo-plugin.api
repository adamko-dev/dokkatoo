public abstract class dev/adamko/dokkatoo/DokkatooBasePlugin : org/gradle/api/Plugin {
	public static final field Companion Ldev/adamko/dokkatoo/DokkatooBasePlugin$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public static final field TASK_GROUP Ljava/lang/String;
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class dev/adamko/dokkatoo/DokkatooBasePlugin$Companion {
	public final fun getDependencyContainerNames ()Ldev/adamko/dokkatoo/DokkatooBasePlugin$DependencyContainerNames;
	public final fun getTaskNames ()Ldev/adamko/dokkatoo/DokkatooBasePlugin$TaskNames;
}

public abstract class dev/adamko/dokkatoo/DokkatooExtension : java/io/Serializable, org/gradle/api/plugins/ExtensionAware {
	public abstract fun getDokkatooCacheDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getDokkatooConfigurationsDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getDokkatooModuleDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getDokkatooPublicationDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getDokkatooPublications ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getDokkatooSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getModulePath ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceSetScopeDefault ()Lorg/gradle/api/provider/Property;
}

public abstract interface class dev/adamko/dokkatoo/DokkatooExtension$Versions {
	public abstract fun getFreemarker ()Lorg/gradle/api/provider/Property;
	public abstract fun getJetbrainsDokka ()Lorg/gradle/api/provider/Property;
	public abstract fun getJetbrainsMarkdown ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinxHtml ()Lorg/gradle/api/provider/Property;
}

public abstract class dev/adamko/dokkatoo/DokkatooPlugin : org/gradle/api/Plugin {
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class dev/adamko/dokkatoo/dokka/DokkaPublication : java/io/Serializable, org/gradle/api/Named {
	public abstract fun getCacheRoot ()Lorg/gradle/api/file/DirectoryProperty;
	protected final fun getCacheRootPath ()Lorg/gradle/api/provider/Provider;
	public abstract fun getDelayTemplateSubstitution ()Lorg/gradle/api/provider/Property;
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getFailOnWarning ()Lorg/gradle/api/provider/Property;
	public abstract fun getFinalizeCoroutines ()Lorg/gradle/api/provider/Property;
	public final fun getFormatName ()Ljava/lang/String;
	public abstract fun getIncludes ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleVersion ()Lorg/gradle/api/provider/Property;
	public fun getName ()Ljava/lang/String;
	public abstract fun getOfflineMode ()Lorg/gradle/api/provider/Property;
	public abstract fun getOutputDir ()Lorg/gradle/api/file/DirectoryProperty;
	protected final fun getOutputDirPath ()Lorg/gradle/api/provider/Provider;
	public abstract fun getPluginsConfiguration ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getSuppressInheritedMembers ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppressObviousFunctions ()Lorg/gradle/api/provider/Property;
}

public abstract class dev/adamko/dokkatoo/dokka/parameters/DokkaExternalDocumentationLinkSpec : dev/adamko/dokkatoo/dokka/parameters/DokkaParameterBuilder, java/io/Serializable, org/gradle/api/Named {
	public synthetic fun build ()Ljava/lang/Object;
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public fun getName ()Ljava/lang/String;
	public abstract fun getPackageListUrl ()Lorg/gradle/api/provider/Property;
	public abstract fun getUrl ()Lorg/gradle/api/provider/Property;
	public final fun packageListUrl (Ljava/lang/String;)V
	public final fun packageListUrl (Lorg/gradle/api/provider/Provider;)V
	public final fun url (Ljava/lang/String;)V
	public final fun url (Lorg/gradle/api/provider/Provider;)V
}

public abstract class dev/adamko/dokkatoo/dokka/parameters/DokkaPackageOptionsSpec : dev/adamko/dokkatoo/dokka/parameters/DokkaParameterBuilder, dev/adamko/dokkatoo/dokka/parameters/HasConfigurableVisibilityModifiers, java/io/Serializable {
	public synthetic fun build ()Ljava/lang/Object;
	public abstract fun getDocumentedVisibilities ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getMatchingRegex ()Lorg/gradle/api/provider/Property;
	public abstract fun getReportUndocumented ()Lorg/gradle/api/provider/Property;
	public abstract fun getSkipDeprecated ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppress ()Lorg/gradle/api/provider/Property;
}

public final class dev/adamko/dokkatoo/dokka/parameters/DokkaParametersKxs$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/adamko/dokkatoo/dokka/parameters/DokkaParametersKxs$$serializer;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/adamko/dokkatoo/dokka/parameters/DokkaParametersKxs;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/adamko/dokkatoo/dokka/parameters/DokkaParametersKxs;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public abstract class dev/adamko/dokkatoo/dokka/parameters/DokkaPluginConfigurationSpec : dev/adamko/dokkatoo/dokka/parameters/DokkaParameterBuilder, java/io/Serializable, org/gradle/api/Named {
	public synthetic fun build ()Ljava/lang/Object;
	public fun getName ()Ljava/lang/String;
	public final fun getPluginFqn ()Ljava/lang/String;
	public abstract fun getSerializationFormat ()Lorg/gradle/api/provider/Property;
	public abstract fun getValues ()Lorg/gradle/api/provider/Property;
}

public final class dev/adamko/dokkatoo/dokka/parameters/DokkaPluginConfigurationSpec$EncodedFormat : java/lang/Enum {
	public static final field JSON Ldev/adamko/dokkatoo/dokka/parameters/DokkaPluginConfigurationSpec$EncodedFormat;
	public static final field XML Ldev/adamko/dokkatoo/dokka/parameters/DokkaPluginConfigurationSpec$EncodedFormat;
	public static fun valueOf (Ljava/lang/String;)Ldev/adamko/dokkatoo/dokka/parameters/DokkaPluginConfigurationSpec$EncodedFormat;
	public static fun values ()[Ldev/adamko/dokkatoo/dokka/parameters/DokkaPluginConfigurationSpec$EncodedFormat;
}

public abstract class dev/adamko/dokkatoo/dokka/parameters/DokkaSourceLinkSpec : dev/adamko/dokkatoo/dokka/parameters/DokkaParameterBuilder, java/io/Serializable {
	public synthetic fun build ()Ljava/lang/Object;
	public abstract fun getLocalDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	protected final fun getLocalDirectoryPath ()Lorg/gradle/api/provider/Provider;
	public abstract fun getRemoteLineSuffix ()Lorg/gradle/api/provider/Property;
	public abstract fun getRemoteUrl ()Lorg/gradle/api/provider/Property;
	public final fun remoteUrl (Ljava/lang/String;)V
	public final fun remoteUrl (Lorg/gradle/api/provider/Provider;)V
}

public abstract class dev/adamko/dokkatoo/dokka/parameters/DokkaSourceSetIDSpec : dev/adamko/dokkatoo/dokka/parameters/DokkaParameterBuilder, org/gradle/api/Named {
	public synthetic fun build ()Ljava/lang/Object;
	public fun getName ()Ljava/lang/String;
	public final fun getScopeId ()Ljava/lang/String;
	public abstract fun getSourceSetName ()Ljava/lang/String;
	public abstract fun setSourceSetName (Ljava/lang/String;)V
}

public abstract class dev/adamko/dokkatoo/dokka/parameters/DokkaSourceSetSpec : dev/adamko/dokkatoo/dokka/parameters/DokkaParameterBuilder, dev/adamko/dokkatoo/dokka/parameters/HasConfigurableVisibilityModifiers, java/io/Serializable, org/gradle/api/Named {
	public synthetic fun build ()Ljava/lang/Object;
	public final fun externalDocumentationLink (Ljava/lang/String;Ljava/lang/String;)V
	public final fun externalDocumentationLink (Ljava/net/URL;Ljava/net/URL;)V
	public final fun externalDocumentationLink (Lorg/gradle/api/Action;)V
	public static synthetic fun externalDocumentationLink$default (Ldev/adamko/dokkatoo/dokka/parameters/DokkaSourceSetSpec;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun externalDocumentationLink$default (Ldev/adamko/dokkatoo/dokka/parameters/DokkaSourceSetSpec;Ljava/net/URL;Ljava/net/URL;ILjava/lang/Object;)V
	public abstract fun getAnalysisPlatform ()Lorg/gradle/api/provider/Property;
	public abstract fun getApiVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getDependentSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getDisplayName ()Lorg/gradle/api/provider/Property;
	public abstract fun getDocumentedVisibilities ()Lorg/gradle/api/provider/SetProperty;
	public abstract fun getExternalDocumentationLinks ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getIncludes ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getJdkVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getLanguageVersion ()Lorg/gradle/api/provider/Property;
	public fun getName ()Ljava/lang/String;
	public abstract fun getNoAndroidSdkLink ()Lorg/gradle/api/provider/Property;
	public abstract fun getNoJdkLink ()Lorg/gradle/api/provider/Property;
	public abstract fun getNoStdlibLink ()Lorg/gradle/api/provider/Property;
	public abstract fun getPerPackageOptions ()Lorg/gradle/api/DomainObjectSet;
	public abstract fun getReportUndocumented ()Lorg/gradle/api/provider/Property;
	public abstract fun getSamples ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getSkipDeprecated ()Lorg/gradle/api/provider/Property;
	public abstract fun getSkipEmptyPackages ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceLinks ()Lorg/gradle/api/DomainObjectSet;
	public abstract fun getSourceRoots ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getSourceSetID ()Lorg/gradle/api/provider/Provider;
	public abstract fun getSourceSetScope ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppress ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppressGeneratedFiles ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppressedFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun perPackageOption (Lorg/gradle/api/Action;)V
	public final fun sourceLink (Lorg/gradle/api/Action;)V
}

public final class dev/adamko/dokkatoo/dokka/parameters/VisibilityModifier : java/lang/Enum {
	public static final field Companion Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier$Companion;
	public static final field INTERNAL Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
	public static final field PACKAGE Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
	public static final field PRIVATE Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
	public static final field PROTECTED Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
	public static final field PUBLIC Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
	public static fun valueOf (Ljava/lang/String;)Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
	public static fun values ()[Ldev/adamko/dokkatoo/dokka/parameters/VisibilityModifier;
}

public final class dev/adamko/dokkatoo/dokka/parameters/VisibilityModifier$Companion {
}

public abstract class dev/adamko/dokkatoo/formats/DokkatooFormatPlugin : org/gradle/api/Plugin {
	public static final field Companion Ldev/adamko/dokkatoo/formats/DokkatooFormatPlugin$Companion;
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun configure (Ldev/adamko/dokkatoo/formats/DokkatooFormatPlugin$DokkatooFormatPluginContext;)V
	public final fun getFormatName ()Ljava/lang/String;
}

public abstract class dev/adamko/dokkatoo/formats/DokkatooGfmPlugin : dev/adamko/dokkatoo/formats/DokkatooFormatPlugin {
	public fun configure (Ldev/adamko/dokkatoo/formats/DokkatooFormatPlugin$DokkatooFormatPluginContext;)V
}

public abstract class dev/adamko/dokkatoo/formats/DokkatooHtmlPlugin : dev/adamko/dokkatoo/formats/DokkatooFormatPlugin {
}

public abstract class dev/adamko/dokkatoo/formats/DokkatooJavadocPlugin : dev/adamko/dokkatoo/formats/DokkatooFormatPlugin {
	public fun configure (Ldev/adamko/dokkatoo/formats/DokkatooFormatPlugin$DokkatooFormatPluginContext;)V
}

public abstract class dev/adamko/dokkatoo/formats/DokkatooJekyllPlugin : dev/adamko/dokkatoo/formats/DokkatooFormatPlugin {
	public fun configure (Ldev/adamko/dokkatoo/formats/DokkatooFormatPlugin$DokkatooFormatPluginContext;)V
}

public abstract class dev/adamko/dokkatoo/tasks/DokkatooGenerateTask : dev/adamko/dokkatoo/tasks/DokkatooTask$WithSourceSets {
	public abstract fun getCacheDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getDokkaModuleFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getDokkaParametersJson ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getGenerationType ()Lorg/gradle/api/provider/Property;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getRuntimeClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getWorkerDebugEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getWorkerJvmArgs ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getWorkerLogFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getWorkerMaxHeapSize ()Lorg/gradle/api/provider/Property;
	public abstract fun getWorkerMinHeapSize ()Lorg/gradle/api/provider/Property;
}

public final class dev/adamko/dokkatoo/tasks/DokkatooGenerateTask$GenerationType : java/lang/Enum {
	public static final field MODULE Ldev/adamko/dokkatoo/tasks/DokkatooGenerateTask$GenerationType;
	public static final field PUBLICATION Ldev/adamko/dokkatoo/tasks/DokkatooGenerateTask$GenerationType;
	public static fun valueOf (Ljava/lang/String;)Ldev/adamko/dokkatoo/tasks/DokkatooGenerateTask$GenerationType;
	public static fun values ()[Ldev/adamko/dokkatoo/tasks/DokkatooGenerateTask$GenerationType;
}

public abstract class dev/adamko/dokkatoo/tasks/DokkatooPrepareModuleDescriptorTask : dev/adamko/dokkatoo/tasks/DokkatooTask$WithSourceSets {
	public abstract fun getDokkaModuleDescriptorJson ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getIncludes ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getModuleDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getModulePath ()Lorg/gradle/api/provider/Property;
}

public abstract class dev/adamko/dokkatoo/tasks/DokkatooPrepareParametersTask : dev/adamko/dokkatoo/tasks/DokkatooTask$WithSourceSets {
	public abstract fun getCacheRoot ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getDelayTemplateSubstitution ()Lorg/gradle/api/provider/Property;
	public abstract fun getDokkaConfigurationJson ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getDokkaModuleFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getDokkaSubprojectParameters ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getFailOnWarning ()Lorg/gradle/api/provider/Property;
	public abstract fun getFinalizeCoroutines ()Lorg/gradle/api/provider/Property;
	public abstract fun getIncludes ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getOfflineMode ()Lorg/gradle/api/provider/Property;
	public final fun getOutputDir ()Lorg/gradle/api/file/DirectoryProperty;
	protected final fun getOutputDirPath ()Lorg/gradle/api/provider/Provider;
	public abstract fun getPluginsClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getPluginsConfiguration ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getPluginsMapConfiguration ()Lorg/gradle/api/provider/MapProperty;
	public abstract fun getPublicationEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppressInheritedMembers ()Lorg/gradle/api/provider/Property;
	public abstract fun getSuppressObviousFunctions ()Lorg/gradle/api/provider/Property;
}

public abstract class dev/adamko/dokkatoo/tasks/DokkatooTask : org/gradle/api/DefaultTask {
}

public abstract class dev/adamko/dokkatoo/tasks/DokkatooTask$WithSourceSets : dev/adamko/dokkatoo/tasks/DokkatooTask {
	public final fun addAllDokkaSourceSets (Lorg/gradle/api/provider/Provider;)V
	public abstract fun getDokkaSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
}

